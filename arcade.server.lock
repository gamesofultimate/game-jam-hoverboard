{"components":[{"tag":"Struct","name":"SelfComponent","label":"Self Component","default_values":"{  }","docs":"Allows you to parent your component against another one, so that positioning of this component\ngets created the local space of the parent component","fields":[]},{"tag":"Struct","name":"SkyComponent","label":"Sky Component","default_values":"{ elevation: 0.0 }","docs":null,"fields":[{"name":"elevation","label":"Elevation","docs":null,"ty":{"tag":"Primitive","ty":{"tag":"F32"},"default_values":"0.0"}}]},{"tag":"Struct","name":"ModelComponent","label":"Model Component","default_values":"{ id: (() => { \n            return Symbol.for(\"ModelId\");\n           })() }","docs":"Attach a Model to a given entity","fields":[{"name":"id","label":"Id","docs":null,"ty":{"tag":"Reference","name":"Identifiable","reference":"Model","default_values":"(() => { \n            return Symbol.for(\"ModelId\");\n           })()","ty":"ModelId"}}]},{"tag":"Struct","name":"AnimationComponent","label":"Animation Component","default_values":"{ animations: [] }","docs":"Allow the mesh to be animated. More than one animation might impact a\nsingle mesh, as long as the skeleton utilized is compatible with that mesh","fields":[{"name":"animations","label":"Animations","docs":null,"ty":{"tag":"Type","name":"Vec","default_values":"[]","ty":{"tag":"Vector","data":{"tag":"Struct","name":"Animation","label":"Animation","default_values":"{ id: (() => { \n            return Symbol.for(\"AnimationId\");\n           })(), rate: 1.0, current: 0.0, state: \"Paused\", weight: 1.0 }","docs":null,"fields":[{"name":"id","label":"Id","docs":null,"ty":{"tag":"Reference","name":"Identifiable","reference":"Animation","default_values":"(() => { \n            return Symbol.for(\"AnimationId\");\n           })()","ty":"AnimationId"}},{"name":"rate","label":"Rate","docs":"How fast to move time forward. [-1.0 - 1.0] where the negatives play\nthe animation in reverse","ty":{"tag":"Primitive","ty":{"tag":"F32"},"default_values":"0.0"}},{"name":"weight","label":"Weight","docs":"How to blend this animation with others","ty":{"tag":"Primitive","ty":{"tag":"F32"},"default_values":"0.0"}},{"name":"current","label":"Current","docs":"Current point in time in the animation","ty":{"tag":"Primitive","ty":{"tag":"F32"},"default_values":"0.0"}},{"name":"state","label":"State","docs":null,"ty":{"tag":"Enum","name":"AnimationState","label":"Animation State","default_values":"\"Paused\"","docs":null,"variants":[{"tag":"Unit","name":"Paused","docs":null,"default_values":"\"Paused\""},{"tag":"Unit","name":"Playing","docs":null,"default_values":"\"Playing\""}]}}]}}}}]},{"tag":"Struct","name":"ParticleComponent","label":"Particle Component","default_values":"{ asset_id: (() => { \n            return Symbol.for(\"ParticleId\");\n           })(), id: (() => { \n      function uuidv4() {\n        return \"10000000-1000-4000-8000-100000000000\".replace(/[018]/g, c =>\n          (c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16)\n        );\n      };\n      return uuidv4()\n     })() }","docs":"Attach a particle system to a given entity","fields":[{"name":"id","label":"Id","docs":null,"ty":{"tag":"Type","name":"Uuid","default_values":"(() => { \n      function uuidv4() {\n        return \"10000000-1000-4000-8000-100000000000\".replace(/[018]/g, c =>\n          (c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16)\n        );\n      };\n      return uuidv4()\n     })()","ty":{"tag":"Uuid"}}},{"name":"asset_id","label":"Asset Id","docs":null,"ty":{"tag":"Reference","name":"Identifiable","reference":"Particle","default_values":"(() => { \n            return Symbol.for(\"ParticleId\");\n           })()","ty":"ParticleId"}}]},{"tag":"Struct","name":"PhysicsComponent","label":"Physics Component","default_values":"{ debug: false, id: (() => { \n      function uuidv4() {\n        return \"10000000-1000-4000-8000-100000000000\".replace(/[018]/g, c =>\n          (c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16)\n        );\n      };\n      return uuidv4()\n     })(), joint: { id: (() => { \n      function uuidv4() {\n        return \"10000000-1000-4000-8000-100000000000\".replace(/[018]/g, c =>\n          (c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16)\n        );\n      };\n      return uuidv4()\n     })(), name: 'Joint', config: null, body: { friction: 0.1, density: 1.0, ccd: true, allow_translation: [true, true, true], allow_rotation: [true, true, true], collider_type: \"CapsuleY\", dynamic_type: \"Dynamic\", restitution: 0.1, id: (() => { \n      function uuidv4() {\n        return \"10000000-1000-4000-8000-100000000000\".replace(/[018]/g, c =>\n          (c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16)\n        );\n      };\n      return uuidv4()\n     })() }, offset: [0.0, 0.0, 0.0] } }","docs":"Add a physics body to the entity","fields":[{"name":"id","label":"Id","docs":null,"ty":{"tag":"Type","name":"Uuid","default_values":"(() => { \n      function uuidv4() {\n        return \"10000000-1000-4000-8000-100000000000\".replace(/[018]/g, c =>\n          (c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16)\n        );\n      };\n      return uuidv4()\n     })()","ty":{"tag":"Uuid"}}},{"name":"debug","label":"Debug","docs":null,"ty":{"tag":"Primitive","ty":{"tag":"Boolean"},"default_values":"false"}},{"name":"joint","label":"Joint","docs":null,"ty":{"tag":"Struct","name":"PhysicsJoint","label":"Physics Joint","default_values":"{ id: (() => { \n      function uuidv4() {\n        return \"10000000-1000-4000-8000-100000000000\".replace(/[018]/g, c =>\n          (c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16)\n        );\n      };\n      return uuidv4()\n     })(), offset: [0.0, 0.0, 0.0], body: { friction: 0.1, allow_translation: [true, true, true], collider_type: \"CapsuleY\", dynamic_type: \"Dynamic\", ccd: true, id: (() => { \n      function uuidv4() {\n        return \"10000000-1000-4000-8000-100000000000\".replace(/[018]/g, c =>\n          (c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16)\n        );\n      };\n      return uuidv4()\n     })(), allow_rotation: [true, true, true], density: 1.0, restitution: 0.1 }, name: 'Joint', config: null }","docs":null,"fields":[{"name":"id","label":"Id","docs":null,"ty":{"tag":"Type","name":"Uuid","default_values":"(() => { \n      function uuidv4() {\n        return \"10000000-1000-4000-8000-100000000000\".replace(/[018]/g, c =>\n          (c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16)\n        );\n      };\n      return uuidv4()\n     })()","ty":{"tag":"Uuid"}}},{"name":"name","label":"Name","docs":null,"ty":{"tag":"Primitive","ty":{"tag":"String"},"default_values":"''"}},{"name":"offset","label":"Offset","docs":null,"ty":{"tag":"Custom","name":"Vector3","default_values":"[0.0, 0.0, 0.0]","ty":"Vector3<f32>"}},{"name":"body","label":"Body","docs":null,"ty":{"tag":"Struct","name":"PhysicsBody","label":"Physics Body","default_values":"{ friction: 0.1, dynamic_type: \"Dynamic\", allow_rotation: [true, true, true], restitution: 0.1, ccd: true, allow_translation: [true, true, true], density: 1.0, collider_type: \"CapsuleY\", id: (() => { \n      function uuidv4() {\n        return \"10000000-1000-4000-8000-100000000000\".replace(/[018]/g, c =>\n          (c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16)\n        );\n      };\n      return uuidv4()\n     })() }","docs":null,"fields":[{"name":"id","label":"Id","docs":null,"ty":{"tag":"Type","name":"Uuid","default_values":"(() => { \n      function uuidv4() {\n        return \"10000000-1000-4000-8000-100000000000\".replace(/[018]/g, c =>\n          (c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16)\n        );\n      };\n      return uuidv4()\n     })()","ty":{"tag":"Uuid"}}},{"name":"dynamic_type","label":"Dynamic Type","docs":null,"ty":{"tag":"Enum","name":"DynamicType","label":"Dynamic Type","default_values":"\"Dynamic\"","docs":null,"variants":[{"tag":"Unit","name":"Dynamic","docs":null,"default_values":"\"Dynamic\""},{"tag":"Unit","name":"Kinematic","docs":null,"default_values":"\"Kinematic\""},{"tag":"Unit","name":"Position","docs":null,"default_values":"\"Position\""},{"tag":"Unit","name":"Static","docs":null,"default_values":"\"Static\""}]}},{"name":"collider_type","label":"Collider Type","docs":null,"ty":{"tag":"Enum","name":"ColliderType","label":"Collider Type","default_values":"\"CapsuleY\"","docs":null,"variants":[{"tag":"Struct","name":"CapsuleY","label":"Capsule Y","default_values":"{ radius: 1.0, half_height: 1.0 }","docs":null,"fields":[{"name":"half_height","label":"Half Height","docs":null,"ty":{"tag":"Primitive","ty":{"tag":"F32"},"default_values":"0.0"}},{"name":"radius","label":"Radius","docs":null,"ty":{"tag":"Primitive","ty":{"tag":"F32"},"default_values":"0.0"}}]},{"tag":"Struct","name":"CapsuleX","label":"Capsule X","default_values":"{ radius: 1.0, half_height: 1.0 }","docs":null,"fields":[{"name":"half_height","label":"Half Height","docs":null,"ty":{"tag":"Primitive","ty":{"tag":"F32"},"default_values":"0.0"}},{"name":"radius","label":"Radius","docs":null,"ty":{"tag":"Primitive","ty":{"tag":"F32"},"default_values":"0.0"}}]},{"tag":"Struct","name":"CapsuleZ","label":"Capsule Z","default_values":"{ radius: 1.0, half_height: 1.0 }","docs":null,"fields":[{"name":"half_height","label":"Half Height","docs":null,"ty":{"tag":"Primitive","ty":{"tag":"F32"},"default_values":"0.0"}},{"name":"radius","label":"Radius","docs":null,"ty":{"tag":"Primitive","ty":{"tag":"F32"},"default_values":"0.0"}}]},{"tag":"Struct","name":"Cube","label":"Cube","default_values":"{ length: 1.0, width: 1.0, height: 1.0 }","docs":null,"fields":[{"name":"width","label":"Width","docs":null,"ty":{"tag":"Primitive","ty":{"tag":"F32"},"default_values":"0.0"}},{"name":"height","label":"Height","docs":null,"ty":{"tag":"Primitive","ty":{"tag":"F32"},"default_values":"0.0"}},{"name":"length","label":"Length","docs":null,"ty":{"tag":"Primitive","ty":{"tag":"F32"},"default_values":"0.0"}}]},{"tag":"Struct","name":"Sphere","label":"Sphere","default_values":"{ radius: 1.0 }","docs":null,"fields":[{"name":"radius","label":"Radius","docs":null,"ty":{"tag":"Primitive","ty":{"tag":"F32"},"default_values":"0.0"}}]},{"tag":"Struct","name":"Trimesh","label":"Trimesh","default_values":"{ id: (() => { \n            return Symbol.for(\"ModelId\");\n           })() }","docs":null,"fields":[{"name":"id","label":"Id","docs":null,"ty":{"tag":"Reference","name":"Identifiable","reference":"Model","default_values":"(() => { \n            return Symbol.for(\"ModelId\");\n           })()","ty":"ModelId"}}]},{"tag":"Struct","name":"Cylinder","label":"Cylinder","default_values":"{ radius: 1.0, half_height: 1.0 }","docs":null,"fields":[{"name":"half_height","label":"Half Height","docs":null,"ty":{"tag":"Primitive","ty":{"tag":"F32"},"default_values":"0.0"}},{"name":"radius","label":"Radius","docs":null,"ty":{"tag":"Primitive","ty":{"tag":"F32"},"default_values":"0.0"}}]}]}},{"name":"density","label":"Density","docs":null,"ty":{"tag":"Primitive","ty":{"tag":"F32"},"default_values":"0.0"}},{"name":"friction","label":"Friction","docs":null,"ty":{"tag":"Primitive","ty":{"tag":"F32"},"default_values":"0.0"}},{"name":"restitution","label":"Restitution","docs":null,"ty":{"tag":"Primitive","ty":{"tag":"F32"},"default_values":"0.0"}},{"name":"allow_translation","label":"Allow Translation","docs":null,"ty":{"tag":"Primitive","ty":{"tag":"Array","data":[{"tag":"Primitive","ty":{"tag":"Boolean"},"default_values":"false"},3]},"default_values":"[false, false, false]"}},{"name":"allow_rotation","label":"Allow Rotation","docs":null,"ty":{"tag":"Primitive","ty":{"tag":"Array","data":[{"tag":"Primitive","ty":{"tag":"Boolean"},"default_values":"false"},3]},"default_values":"[false, false, false]"}},{"name":"ccd","label":"Ccd","docs":null,"ty":{"tag":"Primitive","ty":{"tag":"Boolean"},"default_values":"false"}}]}},{"name":"config","label":"Config","docs":null,"ty":{"tag":"Type","name":"Option","default_values":"null","ty":{"tag":"Option","data":{"tag":"Enum","name":"JointConfig","label":"Joint Config","default_values":"\"Fixed\"","docs":null,"variants":[{"tag":"Struct","name":"Fixed","label":"Fixed","default_values":"{ local_anchor: [0.0, 0.0, 0.0] }","docs":null,"fields":[{"name":"local_anchor","label":"Local Anchor","docs":null,"ty":{"tag":"Custom","name":"Vector3","default_values":"[0.0, 0.0, 0.0]","ty":"Vector3<f32>"}}]},{"tag":"Struct","name":"Spherical","label":"Spherical","default_values":"{ local_anchor: [0.0, 0.0, 0.0] }","docs":null,"fields":[{"name":"local_anchor","label":"Local Anchor","docs":null,"ty":{"tag":"Custom","name":"Vector3","default_values":"[0.0, 0.0, 0.0]","ty":"Vector3<f32>"}}]},{"tag":"Struct","name":"Revolute","label":"Revolute","default_values":"{ axis: [0.0, 0.0, 0.0], local_anchor: [0.0, 0.0, 0.0] }","docs":null,"fields":[{"name":"axis","label":"Axis","docs":null,"ty":{"tag":"Custom","name":"Vector3","default_values":"[0.0, 0.0, 0.0]","ty":"Vector3<f32>"}},{"name":"local_anchor","label":"Local Anchor","docs":null,"ty":{"tag":"Custom","name":"Vector3","default_values":"[0.0, 0.0, 0.0]","ty":"Vector3<f32>"}}]}]}}}}]}}]},{"tag":"Struct","name":"InputComponent","label":"Input Component","default_values":"{ sensitivity: 1.0, speed: { kilometers: 2.0, hours: 1.0 } }","docs":"Allows the user to GhostCam around the world","fields":[{"name":"sensitivity","label":"Sensitivity","docs":null,"ty":{"tag":"Primitive","ty":{"tag":"F32"},"default_values":"0.0"}},{"name":"speed","label":"Speed","docs":null,"ty":{"tag":"Custom","name":"Kph","default_values":"{ kilometers: 1.0, hours: 1.0 }","ty":"Kph"}}]},{"tag":"Enum","name":"LightComponent","label":"Light Component","default_values":"\"Unknown\"","docs":"Attach a light source to a given entity. That can be a directional light,\npoint light, or spot light","variants":[{"tag":"Unit","name":"Unknown","docs":null,"default_values":"\"Unknown\""},{"tag":"Struct","name":"Directional","label":"Directional","default_values":"{ should_cast_shadows: false, inclination: { value: 1.0 }, intensity: 1.0, radiance: [1.0, 1.0, 1.0], azimuth: { value: 0.0 } }","docs":null,"fields":[{"name":"radiance","label":"Radiance","docs":null,"ty":{"tag":"Custom","name":"Vector3","default_values":"[0.0, 0.0, 0.0]","ty":"Vector3<f32>"}},{"name":"intensity","label":"Intensity","docs":null,"ty":{"tag":"Primitive","ty":{"tag":"F32"},"default_values":"0.0"}},{"name":"azimuth","label":"Azimuth","docs":null,"ty":{"tag":"Custom","name":"Radian","default_values":"{ value: 0.0 }","ty":"Radian"}},{"name":"inclination","label":"Inclination","docs":null,"ty":{"tag":"Custom","name":"Radian","default_values":"{ value: 0.0 }","ty":"Radian"}},{"name":"should_cast_shadows","label":"Should Cast Shadows","docs":null,"ty":{"tag":"Primitive","ty":{"tag":"Boolean"},"default_values":"false"}}]},{"tag":"Struct","name":"Point","label":"Point","default_values":"{ are_shadows_soft: false, radiance: [1.0, 1.0, 1.0], should_cast_shadows: false, intensity: 1.0, radius: 1.0, min_radius: 1.0, light_size: 0.5, falloff: 0.0 }","docs":null,"fields":[{"name":"radiance","label":"Radiance","docs":null,"ty":{"tag":"Custom","name":"Vector3","default_values":"[0.0, 0.0, 0.0]","ty":"Vector3<f32>"}},{"name":"intensity","label":"Intensity","docs":null,"ty":{"tag":"Primitive","ty":{"tag":"F32"},"default_values":"0.0"}},{"name":"light_size","label":"Light Size","docs":null,"ty":{"tag":"Primitive","ty":{"tag":"F32"},"default_values":"0.0"}},{"name":"min_radius","label":"Min Radius","docs":null,"ty":{"tag":"Primitive","ty":{"tag":"F32"},"default_values":"0.0"}},{"name":"falloff","label":"Falloff","docs":null,"ty":{"tag":"Primitive","ty":{"tag":"F32"},"default_values":"0.0"}},{"name":"radius","label":"Radius","docs":null,"ty":{"tag":"Primitive","ty":{"tag":"F32"},"default_values":"0.0"}},{"name":"should_cast_shadows","label":"Should Cast Shadows","docs":null,"ty":{"tag":"Primitive","ty":{"tag":"Boolean"},"default_values":"false"}},{"name":"are_shadows_soft","label":"Are Shadows Soft","docs":null,"ty":{"tag":"Primitive","ty":{"tag":"Boolean"},"default_values":"false"}}]},{"tag":"Struct","name":"Spot","label":"Spot","default_values":"{ intensity: 1.0, radiance: [1.0, 1.0, 1.0], cone_length: 1.0, are_shadows_soft: false, should_cast_shadows: false, outer_angle: { value: 0.2 }, inner_angle: { value: 0.1 } }","docs":null,"fields":[{"name":"radiance","label":"Radiance","docs":null,"ty":{"tag":"Custom","name":"Vector3","default_values":"[0.0, 0.0, 0.0]","ty":"Vector3<f32>"}},{"name":"intensity","label":"Intensity","docs":null,"ty":{"tag":"Primitive","ty":{"tag":"F32"},"default_values":"0.0"}},{"name":"cone_length","label":"Cone Length","docs":null,"ty":{"tag":"Primitive","ty":{"tag":"F32"},"default_values":"0.0"}},{"name":"should_cast_shadows","label":"Should Cast Shadows","docs":null,"ty":{"tag":"Primitive","ty":{"tag":"Boolean"},"default_values":"false"}},{"name":"are_shadows_soft","label":"Are Shadows Soft","docs":null,"ty":{"tag":"Primitive","ty":{"tag":"Boolean"},"default_values":"false"}},{"name":"inner_angle","label":"Inner Angle","docs":null,"ty":{"tag":"Custom","name":"Radian","default_values":"{ value: 0.0 }","ty":"Radian"}},{"name":"outer_angle","label":"Outer Angle","docs":null,"ty":{"tag":"Custom","name":"Radian","default_values":"{ value: 0.0 }","ty":"Radian"}}]}]},{"tag":"Struct","name":"TerrainComponent","label":"Terrain Component","default_values":"{ height: 400.0, tile_half_length: 800.0, id: (() => { \n            return Symbol.for(\"TerrainId\");\n           })() }","docs":"Attach a terrain to a given component\nThe terrain itself needs to be built with the Software\ncalled Gaea: (Link: https://quadspinner.com/), and exported\n\nusing multiple tiles (at least 2x2).\n\nOnce exported, follow the following naming convention:\nterrain.{name}.{albedo|normal|height}.x{x}.y{y}\n\nExport the albedo node as rgb16\nExport the normal node as rgb16\nExport the height node as r32","fields":[{"name":"id","label":"Id","docs":null,"ty":{"tag":"Reference","name":"Identifiable","reference":"Terrain","default_values":"(() => { \n            return Symbol.for(\"TerrainId\");\n           })()","ty":"TerrainId"}},{"name":"height","label":"Height","docs":null,"ty":{"tag":"Primitive","ty":{"tag":"F32"},"default_values":"0.0"}},{"name":"tile_half_length","label":"Tile Half Length","docs":null,"ty":{"tag":"Primitive","ty":{"tag":"F32"},"default_values":"0.0"}}]},{"tag":"Struct","name":"AudioListenerComponent","label":"Audio Listener Component","default_values":"{ cone_outer_gain: 0.0, cone_outer_angle_in_radians: { value: 0.0 }, active: false, cone_inner_angle_in_radians: { value: 0.0 } }","docs":"WIP","fields":[{"name":"active","label":"Active","docs":null,"ty":{"tag":"Primitive","ty":{"tag":"Boolean"},"default_values":"false"}},{"name":"cone_inner_angle_in_radians","label":"Cone Inner Angle In Radians","docs":null,"ty":{"tag":"Custom","name":"Radian","default_values":"{ value: 0.0 }","ty":"Radian"}},{"name":"cone_outer_angle_in_radians","label":"Cone Outer Angle In Radians","docs":null,"ty":{"tag":"Custom","name":"Radian","default_values":"{ value: 0.0 }","ty":"Radian"}},{"name":"cone_outer_gain","label":"Cone Outer Gain","docs":null,"ty":{"tag":"Primitive","ty":{"tag":"F32"},"default_values":"0.0"}}]},{"tag":"Struct","name":"PrefabComponent","label":"Prefab Component","default_values":"{ id: (() => { \n            return Symbol.for(\"PrefabId\");\n           })() }","docs":"Allows you to refer to another prefab, and, automatically instantiate those prefabs at the\nlocation of your choosing. Useful for creating large spaces, or crowds of characters","fields":[{"name":"id","label":"Id","docs":"ID of the prefab you are trying to refer to","ty":{"tag":"Reference","name":"Identifiable","reference":"Prefab","default_values":"(() => { \n            return Symbol.for(\"PrefabId\");\n           })()","ty":"PrefabId"}}]},{"tag":"Enum","name":"CameraComponent","label":"Camera Component","default_values":"\"Orthographic\"","docs":"What type of camera do you want to use for rendering the world","variants":[{"tag":"Struct","name":"Orthographic","label":"Orthographic","default_values":"{ right: 1000.0, znear: 0.1, bottom: 0.0, top: 1000.0, primary: true, left: 0.0, zfar: 100.0 }","docs":null,"fields":[{"name":"left","label":"Left","docs":null,"ty":{"tag":"Primitive","ty":{"tag":"F32"},"default_values":"0.0"}},{"name":"right","label":"Right","docs":null,"ty":{"tag":"Primitive","ty":{"tag":"F32"},"default_values":"0.0"}},{"name":"bottom","label":"Bottom","docs":null,"ty":{"tag":"Primitive","ty":{"tag":"F32"},"default_values":"0.0"}},{"name":"top","label":"Top","docs":null,"ty":{"tag":"Primitive","ty":{"tag":"F32"},"default_values":"0.0"}},{"name":"znear","label":"Znear","docs":null,"ty":{"tag":"Primitive","ty":{"tag":"F32"},"default_values":"0.0"}},{"name":"zfar","label":"Zfar","docs":null,"ty":{"tag":"Primitive","ty":{"tag":"F32"},"default_values":"0.0"}},{"name":"primary","label":"Primary","docs":null,"ty":{"tag":"Primitive","ty":{"tag":"Boolean"},"default_values":"false"}}]},{"tag":"Struct","name":"Perspective","label":"Perspective","default_values":"{ primary: true, fovy: {value: 0.7853982}, zfar: 100.0, znear: 0.1 }","docs":null,"fields":[{"name":"fovy","label":"Fovy","docs":null,"ty":{"tag":"Custom","name":"Radian","default_values":"{ value: 0.0 }","ty":"Radian"}},{"name":"znear","label":"Znear","docs":null,"ty":{"tag":"Primitive","ty":{"tag":"F32"},"default_values":"0.0"}},{"name":"zfar","label":"Zfar","docs":null,"ty":{"tag":"Primitive","ty":{"tag":"F32"},"default_values":"0.0"}},{"name":"primary","label":"Primary","docs":null,"ty":{"tag":"Primitive","ty":{"tag":"Boolean"},"default_values":"false"}}]}]},{"tag":"Enum","name":"SkyLightComponent","label":"Sky Light Component","default_values":"\"Image\"","docs":"Add a skylight to the scene. You can choose between an Image-based lighting\nsystem (IBL), or fully dynamic (dynamically generated skies).","variants":[{"tag":"Struct","name":"Image","label":"Image","default_values":"{ id: (() => { \n            return Symbol.for(\"BackgroundId\");\n           })() }","docs":null,"fields":[{"name":"id","label":"Id","docs":null,"ty":{"tag":"Reference","name":"Identifiable","reference":"Background","default_values":"(() => { \n            return Symbol.for(\"BackgroundId\");\n           })()","ty":"BackgroundId"}}]},{"tag":"Struct","name":"Dynamic","label":"Dynamic","default_values":"{ id: (() => { \n            return Symbol.for(\"BackgroundId\");\n           })(), turbidity: 2.0 }","docs":null,"fields":[{"name":"id","label":"Id","docs":null,"ty":{"tag":"Reference","name":"Identifiable","reference":"Background","default_values":"(() => { \n            return Symbol.for(\"BackgroundId\");\n           })()","ty":"BackgroundId"}},{"name":"turbidity","label":"Turbidity","docs":null,"ty":{"tag":"Primitive","ty":{"tag":"F32"},"default_values":"0.0"}}]}]},{"tag":"Struct","name":"ParentComponent","label":"Parent Component","default_values":"{ id: (() => { \n            return Symbol.for(\"PrefabId\");\n           })() }","docs":null,"fields":[{"name":"id","label":"Id","docs":null,"ty":{"tag":"Reference","name":"Identifiable","reference":"Prefab","default_values":"(() => { \n            return Symbol.for(\"PrefabId\");\n           })()","ty":"PrefabId"}}]},{"tag":"Struct","name":"TextComponent","label":"Text Component","default_values":"{ text: 'Hello, World', line_spacing: 1.5, color: [0.0, 0.0, 0.0, 1.0], kerning: 1.2, max_width: 10.0 }","docs":"Work-in-progress","fields":[{"name":"text","label":"Text","docs":null,"ty":{"tag":"Primitive","ty":{"tag":"String"},"default_values":"''"}},{"name":"color","label":"Color","docs":null,"ty":{"tag":"Custom","name":"Vector4","default_values":"[0.0, 0.0, 0.0, 0.0]","ty":"Vector4<f32>"}},{"name":"line_spacing","label":"Line Spacing","docs":null,"ty":{"tag":"Primitive","ty":{"tag":"F32"},"default_values":"0.0"}},{"name":"kerning","label":"Kerning","docs":null,"ty":{"tag":"Primitive","ty":{"tag":"F32"},"default_values":"0.0"}},{"name":"max_width","label":"Max Width","docs":null,"ty":{"tag":"Primitive","ty":{"tag":"F32"},"default_values":"0.0"}}]}]}